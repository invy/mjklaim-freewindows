// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema
// to C++ data binding compiler, in the Proprietary License mode.
// You should have received a proprietary license from Code Synthesis
// Tools CC prior to generating this code. See the license text for
// conditions.
//

#ifndef AOSLCPP_AOSL__EVENT_INL
#define AOSLCPP_AOSL__EVENT_INL

// Begin prologue.
//
//
// End prologue.

#include "aoslcpp/aosl/move_ref.hpp"
#include "aoslcpp/aosl/move_ref.inl"

#include "aoslcpp/aosl/event_type.hpp"
#include "aoslcpp/aosl/event_type.inl"

namespace aosl
{
  // Event
  // 

  inline
  const Event::MoveType& Event::
  move () const
  {
    return this->move_.get ();
  }

  inline
  Event::MoveType& Event::
  move ()
  {
    return this->move_.get ();
  }

  inline
  void Event::
  move (const MoveType& x)
  {
    this->move_.set (x);
  }

  inline
  void Event::
  move (::std::auto_ptr< MoveType > x)
  {
    this->move_.set (x);
  }

  inline
  ::std::auto_ptr< Event::MoveType > Event::
  detach_move ()
  {
    return this->move_.detach ();
  }

  inline
  const Event::TypeType& Event::
  type () const
  {
    return this->type_.get ();
  }

  inline
  Event::TypeType& Event::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void Event::
  type (const TypeType& x)
  {
    this->type_.set (x);
  }

  inline
  void Event::
  type (::std::auto_ptr< TypeType > x)
  {
    this->type_.set (x);
  }

  inline
  ::std::auto_ptr< Event::TypeType > Event::
  detach_type ()
  {
    return this->type_.detach ();
  }

  inline
  const Event::TypeType& Event::
  type_default_value ()
  {
    return type_default_value_;
  }
}

// Begin epilogue.
//
//
// End epilogue.

#endif // AOSLCPP_AOSL__EVENT_INL
