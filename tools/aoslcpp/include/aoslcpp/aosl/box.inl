// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema
// to C++ data binding compiler, in the Proprietary License mode.
// You should have received a proprietary license from Code Synthesis
// Tools CC prior to generating this code. See the license text for
// conditions.
//

#ifndef AOSLCPP_AOSL__BOX_INL
#define AOSLCPP_AOSL__BOX_INL

// Begin prologue.
//
//
// End prologue.

#include "aoslcpp/aosl/vector.hpp"
#include "aoslcpp/aosl/vector.inl"

#include "aoslcpp/aosl/rotation.hpp"
#include "aoslcpp/aosl/rotation.inl"

namespace aosl
{
  // Box
  // 

  inline
  const Box::PositionType& Box::
  position () const
  {
    return this->position_.get ();
  }

  inline
  Box::PositionType& Box::
  position ()
  {
    return this->position_.get ();
  }

  inline
  void Box::
  position (const PositionType& x)
  {
    this->position_.set (x);
  }

  inline
  void Box::
  position (::std::auto_ptr< PositionType > x)
  {
    this->position_.set (x);
  }

  inline
  ::std::auto_ptr< Box::PositionType > Box::
  detach_position ()
  {
    return this->position_.detach ();
  }

  inline
  const Box::SizeType& Box::
  size () const
  {
    return this->size_.get ();
  }

  inline
  Box::SizeType& Box::
  size ()
  {
    return this->size_.get ();
  }

  inline
  void Box::
  size (const SizeType& x)
  {
    this->size_.set (x);
  }

  inline
  void Box::
  size (::std::auto_ptr< SizeType > x)
  {
    this->size_.set (x);
  }

  inline
  ::std::auto_ptr< Box::SizeType > Box::
  detach_size ()
  {
    return this->size_.detach ();
  }

  inline
  const Box::CenterType& Box::
  center () const
  {
    return this->center_.get ();
  }

  inline
  Box::CenterType& Box::
  center ()
  {
    return this->center_.get ();
  }

  inline
  void Box::
  center (const CenterType& x)
  {
    this->center_.set (x);
  }

  inline
  void Box::
  center (::std::auto_ptr< CenterType > x)
  {
    this->center_.set (x);
  }

  inline
  ::std::auto_ptr< Box::CenterType > Box::
  detach_center ()
  {
    return this->center_.detach ();
  }

  inline
  const Box::OrientationType& Box::
  orientation () const
  {
    return this->orientation_.get ();
  }

  inline
  Box::OrientationType& Box::
  orientation ()
  {
    return this->orientation_.get ();
  }

  inline
  void Box::
  orientation (const OrientationType& x)
  {
    this->orientation_.set (x);
  }

  inline
  void Box::
  orientation (::std::auto_ptr< OrientationType > x)
  {
    this->orientation_.set (x);
  }

  inline
  ::std::auto_ptr< Box::OrientationType > Box::
  detach_orientation ()
  {
    return this->orientation_.detach ();
  }
}

// Begin epilogue.
//
//
// End epilogue.

#endif // AOSLCPP_AOSL__BOX_INL
